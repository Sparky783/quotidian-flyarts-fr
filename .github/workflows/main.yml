name: Deployment

# {1}
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [angular, nest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          if [ "${{ matrix.service }}" == "angular" ]; then
            cd frontend
          else
            cd backend
          fi
          npm install

      - name: Install Chrome dependencies for CI
        if: matrix.service == 'frontend'
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3 libgconf-2-4

      - name: Run tests
        run: |
          if [ "${{ matrix.service }}" == "angular" ]; then
            cd frontend
            npm run test:ci
          else
            cd backend
            npm run test
          fi

  build:
    runs-on: ubuntu-latest
    needs: test

    strategy:
      matrix:
        service: [angular, nest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          if [ "${{ matrix.service }}" == "angular" ]; then
            cd frontend
          else
            cd backend
          fi
          npm install

      - name: Build project
        run: |
          if [ "${{ matrix.service }}" == "angular" ]; then
            cd frontend
            npm run build
          else
            cd backend
            npm run build
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy Angular to FTP
        uses: SamKirkland/FTP-Deploy-Action@4.2.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: /public_html/FLYARTS-QUOTIDIAN/website/
          local-dir: frontend/dist/

      - name: Deploy Nest.js to FTP
        uses: SamKirkland/FTP-Deploy-Action@4.2.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: /public_html/FLYARTS-QUOTIDIAN/api/dist/
          local-dir: backend/dist/


